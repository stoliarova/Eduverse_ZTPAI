spring.application.name=eduverse





#
# JDBC SQL Properties
#

# Database connection data
spring.datasource.url=jdbc:postgresql://localhost:5432/eduverse
spring.datasource.username=postgres
spring.datasource.password=3889

# OAuth2 Configuration
#spring.security.oauth2.client.registration.google.client-id=your-google-client-id
#spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
#spring.security.oauth2.client.registration.google.scope=openid,email,profile

spring.security.oauth2.client.registration.github.client-id=Ov23limh4p6MdrDECLqe
spring.security.oauth2.client.registration.github.client-secret=b693028e3b9a77f3c913533f740c766bac45de1d



# Update database according to entities
# DO NOT USE IN PRODUCTION!!!
#spring.jpa.hibernate.ddl-auto=update

# Drop and recreate database according to entities on application startup
# USED FOR INITIAL TESTING PURPOSES ONLY!!!
spring.jpa.hibernate.ddl-auto=create


#
# RabbitMQ settings
#
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#
# Spring Data REST settings
#

# basic path for JpaRepository request url
spring.data.rest.base-path=/api

# number of items on page for requests that return collections
spring.data.rest.default-page-size=100


#
# Security
#

# Default login and password for API (instead of autogenerated)
#spring.security.user.name=admin
#spring.security.user.password=admin

# Temporary disable security for testing purposes
#spring.security.ignored=/**
#security.ignored=/**

#
# Logging
#

# Log JDBC SQL messages.
# DO NOT USE FOR PRODUCTION!!! It logs private user data
logging.level.org.springframework.jdbc.core=TRACE
logging.level.org.hibernate.SQL = debug
logging.level.org.hibernate.orm.jdbc.bing=trace

# Turn off Spring banner
spring.main.banner-mode=off

# Set logging level to WARNING
#logging.level.root=warn

logging.level.org.springframework.security=TRACE

logging.level.com.eduverse.eduverse.filters=DEBUG


